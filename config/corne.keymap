/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3
#define NAV 4

&mt {
    tapping-term-ms = <300>;
};

&lt {
    quick_tap_ms = <200>;
};

&mt {
    quick_tap_ms = <200>;
};

/ {
    macros {
        zed_alt_tab: zed_alt_tab {
            label = "ZM_zed_alt_tab";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LALT>;
        };

        zed_rub_out: zed_rub_out {
            label = "ZM_zed_rub_out";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp BSPC>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        zed_assignment: zed_assignment {
            label = "ZM_zed_assignment";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp COLON>, <&macro_tap>, <&kp EQUAL>;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_EQUAL {
            timeout-ms = <45>;
            key-positions = <1 10>;
            bindings = <&kp EQUAL>;
        };

        combo_ASSIGNMENT {
            timeout-ms = <45>;
            key-positions = <5 6>;
            bindings = <&zed_assignment>;
        };

        combo_LPAR {
            timeout-ms = <71>;
            key-positions = <1 13>;
            bindings = <&kp LPAR>;
        };

        combo_RPAR {
            timeout-ms = <71>;
            key-positions = <7 19>;
            bindings = <&kp RPAR>;
        };

        combo_LCURLY {
            timeout-ms = <71>;
            key-positions = <4 16>;
            bindings = <&kp LEFT_BRACE>;
        };

        combo_RCURLY {
            timeout-ms = <71>;
            key-positions = <22 10>;
            bindings = <&kp RIGHT_BRACE>;
        };

        combo_LBRACKET {
            timeout-ms = <71>;
            key-positions = <3 15>;
            bindings = <&kp LEFT_BRACKET>;
        };

        combo_RBRACKET {
            timeout-ms = <71>;
            key-positions = <9 21>;
            bindings = <&kp RIGHT_BRACKET>;
        };

        combo_LESSTHAN {
            timeout-ms = <71>;
            key-positions = <2 14>;
            bindings = <&kp LESS_THAN>;
        };

        combo_GREATERTHAN {
            timeout-ms = <71>;
            key-positions = <8 20>;
            bindings = <&kp GREATER_THAN>;
        };

        combo_PAGEUP {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp PAGE_UP>;
        };

        combo_PAGEDOWN {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&kp PAGE_DOWN>;
        };

        combo_QUOTE {
            timeout-ms = <50>;
            key-positions = <13 8>;
            bindings = <&kp SINGLE_QUOTE>;
        };

        combo_DOUBLEQUOTE {
            timeout-ms = <50>;
            key-positions = <13 9>;
            bindings = <&kp DOUBLE_QUOTES>;
        };

        combo_HOME {
            timeout-ms = <50>;
            key-positions = <6 7 8>;
            bindings = <&kp HOME>;
        };

        combo_END {
            timeout-ms = <70>;
            key-positions = <30 31 32>;
            bindings = <&kp END>;
        };

        combo_RUBOUT {
            timeout-ms = <45>;
            key-positions = <16 17>;
            bindings = <&kp LC(BSPC)>;
        };

        combo_BACKSPACE {
            timeout-ms = <45>;
            key-positions = <18 19>;
            bindings = <&kp BSPC>;
        };

        combo_RGUI {
            // This is a quick way to strike the Compose key
            // (when the Compose key is mapped to RGUI

            timeout-ms = <50>;
            key-positions = <13 14 15 16>;
            bindings = <&kp RGUI>;
        };


    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  W  |  L  |  Y  |  P  |  B  |   |  Z  |  F   |  O  |  U  |  '  | BKSP |
            // | CTRL |  C  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  A  |  '   |
            // | SHFT |  Q  |  J  |  V  |  D  |  K  |   |  X  |  H   |  /  |  ,  |  .  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&mt LALT TAB  &kp W  &kp L  &kp Y     &kp P  &kp B            &kp Z      &kp F  &kp O     &kp U      &kp SQT  &mt RALT BSPC
&kp LCTRL     &kp C  &kp R  &kp S     &kp T  &kp G            &kp M      &kp N  &kp E     &kp I      &kp A    &mt RCTRL SEMI
&kp LSHFT     &kp Q  &kp J  &kp V     &kp D  &kp K            &kp X      &kp H  &kp FSLH  &kp COMMA  &kp DOT  &kp ESC
                            &kp LGUI  &mo 1  &mt LSHFT RET    &kp SPACE  &mo 2  &kp LGUI
            >;
        };

        lower_layer {
            // ---------------------------------------------------------------------------------------------
            // |  ALT/TAB |      |      |  UP   |       |      |     |     |  7 | 8 |  9 |     |     |
            // |  CTRL    |      | LEFT | DOWN  | RGHT  |      |     | SPC |  4 | 5 |  6 |  +  | DEL |
            // |  LALT    |      |      |DEFAULT|CANARY | NUM  |     |  0  |  1 | 2 |  3 |  /  |  .  |
            //                                | GUI |     | SHFT |        | ENT |     | ALT |

            bindings = <
&zed_alt_tab  &none  &none     &kp UP    &none      &none         &none      &kp N7  &kp N8  &kp N9  &none         &none
&kp LCTRL     &none  &kp LEFT  &kp DOWN  &kp RIGHT  &none         &kp SPACE  &kp N4  &kp N5  &kp N6  &kp KP_PLUS   &kp DEL
&kp LALT      &none  &none     &none     &none      &kp KP_NUM    &kp N0     &kp N1  &kp N2  &kp N3  &kp KP_SLASH  &kp KP_DOT
                               &trans    &trans     &kp LSHFT     &kp ENTER  &mo 2   &trans
            >;
        };

        raise_layer {
            // ---------------------------------------------------------------------------------------------------
            // | NMLK |  !  |  @  |  #  |  $  |  %  |          |  ^  |  &  |  *  |     | SCLK | CAPS |
            // | CTRL |     |     |     |     |     |          |  -  |  =  |  UP |     |  \   |   `  |
            // |      |     |     |     |     |     |          |  _  |  +  | DOWN|     |  |   |   ~  |
            //                    |     |     | ADJ |          | ADJ |     |     |

            bindings = <
&kp KP_NUM  &kp EXCL  &kp AT  &kp POUND  &kp DOLLAR  &kp PERCENT    &kp CARET    &kp AMPERSAND  &kp STAR  &none  &kp SLCK  &kp CAPS
&kp LCTRL   &none     &none   &none      &none       &none          &kp MINUS    &kp EQUAL      &kp UP    &none  &kp BSLH  &kp GRAVE
&trans      &none     &none   &none      &none       &none          &kp UNDER    &kp PLUS       &kp DOWN  &none  &kp PIPE  &kp TILDE
                              &trans     &trans      &lt ADJ RET    &lt ADJ ESC  &trans         &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR |
            // | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
            // |      |     |     |     |     |     |   |     |     |     |     |     |      |
            //                          |     |     |     |   |     |     |     |

            bindings = <
&kp F1       &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &kp F7        &kp F8        &kp F9        &kp F10       &kp F11       &kp F12
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &none
&bootloader  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader
                                         &trans        &none         &trans          &trans        &none         &trans
            >;
        };

        nav_layer {
            // ---------------------------------------------------------------------------------------------------
            // |  ALT/TAB |      |      |  UP   |       |      |     |     |  7 | 8 |  9 |     |     |
            // |  CTRL    |      | LEFT | DOWN  | RGHT  |      |     | SPC |  4 | 5 |  6 |  +  | DEL |
            // |  LALT    |      |      |DEFAULT|CANARY | NUM  |     |  0  |  1 | 2 |  3 |  /  |  .  |
            //                              | GUI |     | SHFT |        | ENT |     | ALT |

            bindings = <
&zed_alt_tab  &none  &none  &none   &none    &none        &none      &none     &kp UP    &none      &none  &none
&kp LCTRL     &none  &none  &none   &none    &none        &none      &kp LEFT  &kp DOWN  &kp RIGHT  &none  &none
&kp LALT      &none  &none  &none   &to DEF  &none        &none      &none     &none     &none      &none  &none
                            &trans  &trans   &kp LSHFT    &kp ENTER  &mo ADJ   &trans
            >;
        };
    };
};
